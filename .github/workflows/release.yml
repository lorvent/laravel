on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "*.*" # match any tag

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Build project # This would build the project, and then creating build zip file
        #env:
        #TAG: ${{ steps.get_version.outputs.VERSION }}
        run: |
          echo ::set-env name=TAG::${{ steps.get_version.outputs.VERSION }}
          # Install composer dependencies
          ##composer install
          # Install npm dependencies and move them into places
          ##yarn
          ##npm run dev
          # create a folder with version name and move all files into it so that it will be extracted into its own folder
          mkdir build-${{ env.TAG }}
          #mv !(build-${{ TAG }}) build-${{ TAG }}
          cp -af !(build-${{ TAG }}) build-${{ TAG }}/
          # Create final zip to download
          zip -r build-${{ TAG }}.zip build-${{ TAG }} -x *.git* node_modules/\ build-${{ steps.get_version.outputs.VERSION }}/\*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/build-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: build-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip
